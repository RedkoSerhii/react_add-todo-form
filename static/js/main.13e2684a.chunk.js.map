{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","memo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","findUserById","userId","usersFromServer","find","preparedTodos","App","useState","setTitle","selectedUserId","setSelectedUserId","setTodos","isErrorOnUserSelect","setErrorOnUserSelect","isErrorOnTitleInput","setErrorOnTitleInput","onSubmit","event","preventDefault","maxTodoId","Math","max","newTodo","prev","type","value","placeholder","onChange","target","htmlFor","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13e2684a.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { User } from '../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = memo(({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      className=\"UserInfo card-link text-white fst-italic text-decoration-none\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n});\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../Types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = memo(({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo card text-bg-danger bg-gradient bg-opacity-50 shadow p-2 m-3',\n        { 'TodoInfo--completed bg-success': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title fs-5 text-dark\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n});\n","import React, { memo } from 'react';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../Types/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = memo(({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n});\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './components/Types/Todo';\nimport { User } from './components/Types/User';\nimport 'bulma/css/bulma.css';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: findUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [todos, setTodos] = useState(preparedTodos);\n  const [isErrorOnUserSelect, setErrorOnUserSelect] = useState(false);\n  const [isErrorOnTitleInput, setErrorOnTitleInput] = useState(false);\n\n  const handleTitleChange = (value: string) => {\n    setTitle(value);\n    if (isErrorOnTitleInput) {\n      setErrorOnTitleInput(false);\n    }\n  };\n\n  const handleUserChange = (value: string) => {\n    setSelectedUserId(value);\n    if (isErrorOnUserSelect) {\n      setErrorOnUserSelect(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title || !selectedUserId) {\n      setErrorOnTitleInput(!title);\n      setErrorOnUserSelect(!selectedUserId);\n\n      return;\n    }\n\n    if (selectedUserId && title) {\n      const maxTodoId = Math.max(...todos.map(todo => todo.id));\n\n      const newTodo: Todo = {\n        title,\n        userId: +selectedUserId,\n        completed: false,\n        id: maxTodoId + 1,\n        user: findUserById(+selectedUserId),\n      };\n\n      setTodos(prev => [...prev, newTodo]);\n      setTitle('');\n      setSelectedUserId('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-1\">Add todo form</h1>\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n\n          <input\n            data-cy=\"titleInput\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            className=\"input is-rounded\"\n            placeholder=\"Enter title of task\"\n            onChange={(event) => handleTitleChange(event.target.value)}\n          />\n\n          {isErrorOnTitleInput && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"userSelect\"\n            className=\"label\"\n          >\n            Choose user:\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUserId}\n            className=\"input is-rounded\"\n            onChange={(event) => handleUserChange(event.target.value)}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {isErrorOnUserSelect && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-primary is-light is-medium is-rounded\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}